name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allows manual triggering

env:
  GO_VERSION: '1.24'

jobs:
  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            name: discord-time-presence-windows-amd64.exe
          - goos: windows
            goarch: arm64
            name: discord-time-presence-windows-arm64.exe
          - goos: linux
            goarch: amd64
            name: discord-time-presence-linux-amd64
          - goos: linux
            goarch: arm64
            name: discord-time-presence-linux-arm64
          - goos: darwin
            goarch: amd64
            name: discord-time-presence-darwin-amd64
          - goos: darwin
            goarch: arm64
            name: discord-time-presence-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        run: |
          go build \
            -ldflags="-s -w -X 'main.DefaultClientID=${{ secrets.DISCORD_CLIENT_ID }}'" \
            -o ${{ matrix.name }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
          retention-days: 1